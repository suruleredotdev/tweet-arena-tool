# c/o https://andr.is-a.dev/me/blog/deploy-your-next-js-website-to-github-pages
name: Build and Deploy

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      commit_version:
        description: 'Commit version to deploy (Git SHA)'
        default: 'HEAD'
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    env:
      NOTION_SECRET: ${{ secrets.NOTION_SECRET }}
      ARENA_UID: ${{ secrets.ARENA_UID }}
      ARENA_SECRET: ${{ secrets.ARENA_SECRET }}
      ARENA_PERSONAL_ACCESS_TOKEN: ${{ secrets.ARENA_PERSONAL_ACCESS_TOKEN }}
      NEXT_PUBLIC_BASE_PATH: ${{ vars.NEXT_PUBLIC_BASE_PATH }}
      NODE_ENV: production
      DEBUG: info

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          ref: ${{ inputs.commit_version }}
      - run: npm install --save-dev webpack dotenv-webpack cross-env typescript @types/react @next/bundle-analyzer # arg src: https://github.com/apotdevin/thunderhub/issues/104#issuecomment-665566260
      - run: npm install --production=false
      - run: npm run build
      # inlined from actions/upload-pages-artifact@v0
      - name: Archive artifact
        shell: sh
        if: runner.os == 'Linux'
        run: |
          tar \
            --dereference --hard-dereference \
            --directory ./ \
            -cvf "$RUNNER_TEMP/artifact.tar" \
            --exclude=.git \
            --exclude=.github \
            --exclude=node_modules \
            .
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: Upload artifact
          path: ${{ runner.temp }}/artifact.tar
          retention-days: 7
          if-no-files-found: error

  # Deploy job
  deploy:
    # Add a dependency to the build job
    needs: build

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Specify runner + deployment step
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
